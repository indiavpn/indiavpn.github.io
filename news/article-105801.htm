<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://indiavpn.github.io/news/article-105801.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- SEO Meta Tags -->
    <!-- OG Meta Tags to improve the way the post looks when you share the page on Facebook, Twitter, LinkedIn -->
    <meta property="og:site_name" content="" /> <!-- website name -->
    <meta property="og:site" content="" /> <!-- website link -->
    <meta property="og:title" content="" /> <!-- title shown in the actual shared post -->
    <meta property="og:description" content="" /> <!-- description shown in the actual shared post -->
    <meta property="og:image" content="" /> <!-- image link, make sure it's jpg -->
    <meta property="og:url" content="" /> <!-- where do you want your post to link to -->
    <meta name="twitter:card" content="summary_large_image"> <!-- to have large image post format in Twitter -->
    <title>如何用C/C++实现去除字符串头和尾指定的字符</title>
        <meta name="description" content="编程时我们经常需要对字符串进行操作，其中有一项操作就是去除字符串的头（尾）指定的字符，比如空格。通常我们会使用封装好的库函数或者类函数的Trim方法来实现，如果自己动手写一个TrimHead和Trim" />
        <link rel="icon" href="/assets/website/img/v2rayx/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="印度免费VPN 节点订阅中文官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://indiavpn.github.io/news/article-105801.htm" />
    <meta property="og:site_name" content="印度免费VPN 节点订阅中文官网" />
    <meta property="og:title" content="如何用C/C++实现去除字符串头和尾指定的字符" />
    <meta property="og:image" content="https://indiavpn.github.io/uploads/20240905/256eced945f9d40284ec4a48bcf3669b.webp" />
        <meta property="og:release_date" content="2025-04-27T08:30:45" />
    <meta property="og:updated_time" content="2025-04-27T08:30:45" />
        <meta property="og:description" content="编程时我们经常需要对字符串进行操作，其中有一项操作就是去除字符串的头（尾）指定的字符，比如空格。通常我们会使用封装好的库函数或者类函数的Trim方法来实现，如果自己动手写一个TrimHead和Trim" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="如何用C/C++实现去除字符串头和尾指定的字符">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Styles -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400;0,600;0,700;1,400&display=swap" rel="stylesheet">
    <link href="/assets/website/css/v2rayx/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2rayx/fontawesome-all.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2rayx/swiper.css" rel="stylesheet">
    <link href="/assets/website/css/v2rayx/styles.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-EXP0PN9SNQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-EXP0PN9SNQ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Navigation -->
    <nav id="navbar" class="navbar navbar-expand-lg fixed-top navbar-light" aria-label="Main navigation">
        <div class="container">
            <a class="navbar-brand logo-image" href="/">
                        <span>印度免费VPN</span>
                        </a>
            <!-- Text Logo - Use this if you don't have a graphic logo -->
            <!-- <a class="navbar-brand logo-text" href="index.html">Yavin</a> -->
            <button class="navbar-toggler p-0 border-0" type="button" id="navbarSideCollapse" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse offcanvas-collapse" id="navbarsExampleDefault">
                <ul class="navbar-nav ms-auto navbar-nav-scroll">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/client.htm">客户端</a>
                    </li>
                                    </ul>
            </div> <!-- end of navbar-collapse -->
        </div> <!-- end of container -->
    </nav> <!-- end of navbar -->
    <!-- end of navigation -->
    <!-- Header -->
    <header class="ex-header bg-gray">
        <div class="container">
            <div class="row">
                <div class="col-xl-10 offset-xl-1">
                    <h1>如何用C/C++实现去除字符串头和尾指定的字符</h1>
                    <p>
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                    </p>
                </div> <!-- end of col -->
            </div> <!-- end of row -->
        </div> <!-- end of container -->
    </header> <!-- end of ex-header -->
    <!-- end of header -->
    <!-- Details 1 -->
    <div id="details" class="basic-2">
        <img class="decoration-star" src="/assets/website/img/v2rayx/decoration-star.svg" alt="alternative">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<p>编程时我们经常需要对字符串进行操作，其中有一项操作就是去除字符串的头（尾）指定的字符，比如空格。通常我们会使用封装好的库函数或者类函数的Trim方法来实现，<strong>如果自己动手写一个TrimHead和TrimTail函数该如何实现呢？</strong></p> <p>本文针对字符串头（尾）部指定的字符的去除，分别给出两个实现方法。并分别比较一下改进后的性能如何？</p> <h2 id="一从头部开始去除指定字符">一、从头部开始去除指定字符</h2> <p>首先从头遍历，直到遇见第一个非指定字符，此后将后续字符按顺序逐一前移。</p> <pre><code class="language-c">// 实现方式一 void TrimHead(char* pszSrc, char chTrim) { 	if(NULL == pszSrc) 		return; 	 	// 从头部开始跳过chTrim指定的字符 	char* psz = pszSrc; 	while (*psz &amp;&amp; *psz == chTrim)  		psz++; 	 	// 将后面字符逐一拷贝到前面 	int i = 0; 	while(*psz) 	{ 		*(pszSrc+i) = *psz; 		i++; 		psz++; 	} 	*(pszSrc+i) = 0; }</code></pre> <p>上述函数中，在找到第一个非指定字符后，通过while函数逐一前移字符，如果后续字符串很长的话，性能是不是会比较低？<strong>我们改进一下，使用memmove函数替换while操作，下面是实现方法，代码更加简洁易读。</strong></p> <pre><code class="language-c">// 实现方式二 void TrimHeadEx(char* pszSrc, char chTrim) { 	if(NULL == pszSrc) 		return;  	// 从头部开始跳过chTrim指定的字符 	int iStrLen = strlen(pszSrc); 	char* psz = pszSrc; 	while (*psz &amp;&amp; *psz == chTrim)  		psz++;  	// psz指向第一个非指定字符的位置 	if(psz != pszSrc) 	{ 		// 计算新字符串长度 		iStrLen = iStrLen - (psz - pszSrc); 		memmove(pszSrc, psz, (iStrLen+1));	// +1表示将末尾的0也一并拷贝 	} }</code></pre> <p><strong>方法二的代码要比方法一的简洁，那么它的速度会比方法一的快么？文末会给出答案。</strong></p> <h2 id="二去除尾部指定的字符">二、去除尾部指定的字符</h2> <pre><code class="language-c">// 实现方式一 void TrimTail(char* pszSrc, char chTrim) { 	if(NULL == pszSrc) 		return;  	char* psz = pszSrc; 	char* pszLast = NULL; 	 	// 从头开始遍历直到整个字符串结束 	while(*psz) 	{ 		// 遇到指定字符，则用pszLast记住该位置 		if(*psz == chTrim) 		{ 			if(NULL == pszLast) 				pszLast = psz; 		} 		else 			pszLast = NULL; 		psz++; 	} 	 	// 如果找到末尾的第一个指定字符，则作为字符串的结尾 	if(pszLast != NULL) 		*pszLast = 0; }</code></pre> <p>上述方法中，我们需要遍历完整个字符串，<strong>如果字符串很长的话，或者遇到极端情况，就是结尾没有指定字符时，也要将整个字符串遍历完毕。显然这种实现方式的效率并不高。</strong> 那么我们改进一下算法，从字符串的尾部进行遍历。</p> <pre><code class="language-c">// 实现方式二 void TrimTailEx(char* pszSrc, char chTrim) { 	if(NULL == pszSrc) 		return;  	// 从尾部开始跳过chTrim指定字符 	int iStrLen = strlen(pszSrc); 	char* pszStr = pszSrc; 	int iLastIdx = iStrLen - 1; 	while(iLastIdx &gt;= 0 &amp;&amp; *(pszStr+iLastIdx) == chTrim) 		iLastIdx--; 	 	// 计算新字符串长度并在结尾赋值为0 	iStrLen = iLastIdx+1; 	*(pszSrc+iStrLen) = 0; }</code></pre> <p>上述实现方式是从字符串的尾部进行遍历，实现的方式也更加的简洁。如果结尾没有指定字符，该函数会在遍历第一个字符后就退出，性能显然要好过方式一。</p> <p><strong>那么对于TrimHead和TrimTail的两种实现，方式二和方式一到底谁快呢？是不是和我们想象的一样有差距或者差距很大呢？</strong></p> <h2 id="三测试比较">三、测试比较</h2> <p>这里写了一个测试函数TestSpeedTrim，为了让时间更加明显，在该函数中设置的循环次数为10000000。大家可以亲自运行测试一下，看看debug和release两个版本的差异，结果一定会让你吃惊，可能和你想的并不一样哦。</p> <pre><code class="language-c">#include &lt;time.h&gt; #include &lt;stdio.h&gt; #include &lt;string.h&gt; #include &lt;stdlib.h&gt; void TestSpeedTrim(bool bTrimHead) { 	char szTrim1[256] = {0}; 	char szTrim2[256] = {0}; 	 	char* pszOrigin = "     This is a trim test head/tail    "; 	strcpy(szTrim1, pszOrigin); 	strcpy(szTrim2, pszOrigin); 	 	int i = 0; 	int iCount = 10000000; 	clock_t cStart = 0; 	 	// 第一种Trim方法 	cStart = clock(); 	for(i = 0; i &lt; iCount; i++) 	{ 		bTrimHead ? TrimHead(szTrim1, ' ') : TrimTail(szTrim1, ' '); 	} 	clock_t cSpan1 = clock() - cStart; 	 	// 第二种Trim方法 	cStart = clock(); 	for(i = 0; i &lt; iCount; i++) 	{ 		bTrimHead ? TrimHeadEx(szTrim2, ' ') :	TrimTailEx(szTrim2, ' '); 	} 	clock_t cSpan2 = clock() - cStart; 	 	printf("cSpan1 = %d, cSpan2 = %d\r\n", cSpan1, cSpan2); 	printf("szTrim1=[%s]\r\n", szTrim1); 	printf("szTrim2=[%s]\r\n", szTrim2); }  int main(int argc, char* argv[]) { 	// 测试头 	printf("删除头部的空字符：\r\n"); 	TestSpeedTrim(true);  	// 测试尾 	printf("\r\n删除尾部的空字符：\r\n"); 	TestSpeedTrim(false);  	getchar(); 	return 0; }</code></pre> <p><strong>这里就不给出比较结果了，因为只有自己亲自动手实现并跑一遍后，才会记得更加牢靠。</strong></p> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-104973.htm">宠物粮食品牌前十名排行榜有哪些呢视频讲解（宠物粮食品牌都有什么）</a></p>
                                        <p>下一个：<a href="/news/article-105802.htm">成都市宠物狗领养平台官网电话（成都宠物狗领养吧）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-4-26-node-share-links.htm" title="印度免费VPN | 4月26日18.2M/S|免费V2ray/Shadowrocket/SSR/Clash订阅节点地址分享">印度免费VPN | 4月26日18.2M/S|免费V2ray/Shadowrocket/SSR/Clash订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-12-free-node-subscribe.htm" title="印度免费VPN | 4月12日18.9M/S|免费SSR/Clash/V2ray/Shadowrocket订阅节点地址分享">印度免费VPN | 4月12日18.9M/S|免费SSR/Clash/V2ray/Shadowrocket订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/news/article-90656.htm" title="C++内存泄漏的定位方法总结">C++内存泄漏的定位方法总结</a></li>
                        <li class="py-2"><a href="/news/article-84174.htm" title="忠县宠物店给宠物洗澡（宠物店洗澡大概多少钱）">忠县宠物店给宠物洗澡（宠物店洗澡大概多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-93622.htm" title="Vue内置组件的component标签">Vue内置组件的component标签</a></li>
                        <li class="py-2"><a href="/news/article-96643.htm" title="宠物领养市场规模分析报告（宠物领养需求分析）">宠物领养市场规模分析报告（宠物领养需求分析）</a></li>
                        <li class="py-2"><a href="/news/article-98758.htm" title="湖北宠物店城管打人（宠物店举报电话多少）">湖北宠物店城管打人（宠物店举报电话多少）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-20-free-subscribe-node.htm" title="印度免费VPN | 4月20日21.5M/S|免费Clash/V2ray/SSR/Shadowrocket订阅节点地址分享">印度免费VPN | 4月20日21.5M/S|免费Clash/V2ray/SSR/Shadowrocket订阅节点地址分享</a></li>
                        <li class="py-2"><a href="/news/article-90657.htm" title="vue解决vant组件样式失效问题">vue解决vant组件样式失效问题</a></li>
                        <li class="py-2"><a href="/news/article-89878.htm" title="打了疫苗的动物用不用打狂犬疫苗了呢（动物打过疫苗被咬还有事啊）">打了疫苗的动物用不用打狂犬疫苗了呢（动物打过疫苗被咬还有事啊）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">81</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div> <!-- end of container -->
    </div> <!-- end of basic-2 -->
    <!-- end of details 1 -->
        <!-- Copyright -->
    <div class="copyright bg-gray">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    &nbsp;
                </div> <!-- end of col -->
            </div> <!-- enf of row -->
            <div class="row">
                <div class="col-lg-12">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p class="p-small"><a href="/">印度免费VPN 节点订阅中文官网</a> 版权所有 Powered by WordPress</p>
                </div> <!-- end of col -->
            </div> <!-- enf of row -->
        </div> <!-- end of container -->
    </div> <!-- end of copyright -->
    <!-- end of copyright -->
    <!-- Back To Top Button -->
    <button onclick="topFunction()" id="myBtn">
        <img src="/assets/website/img/v2rayx/up-arrow.png" alt="alternative">
    </button>
    <!-- end of back to top button -->
    <!-- Scripts -->
    <script src="/assets/website/js/frontend/v2rayx/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayx/bootstrap.min.js"></script> <!-- Bootstrap framework -->
    <script src="/assets/website/js/frontend/v2rayx/swiper.min.js"></script> <!-- Swiper for image and text sliders -->
    <script src="/assets/website/js/frontend/v2rayx/purecounter.min.js"></script> <!-- Purecounter counter for statistics numbers -->
    <script src="/assets/website/js/frontend/v2rayx/scripts.js"></script> <!-- Custom scripts -->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>